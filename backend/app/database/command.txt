2Ô∏è‚É£ Run Alembic upgrade head (If Migrations Already Exist)
If you already have migration files and just need to apply them, run:

alembic upgrade head
‚úÖ This will apply all pending migrations to the database.

3Ô∏è‚É£ If No Migrations Exist, Generate an Initial Migration
If you haven't created migrations yet, generate them with:

alembic revision --autogenerate -m "Initial migration"
‚úÖ This creates a new migration file based on your SQLAlchemy models.

4Ô∏è‚É£ Apply Migrations to Database
After generating the migration, apply it using:

alembic upgrade head
‚úÖ This updates your database schema to match your models.

5Ô∏è‚É£ Verify Migration Status
To check which migrations have been applied, run:

alembic history
‚úÖ This lists all migration revisions.

6Ô∏è‚É£ If You Need to Rollback
If something goes wrong and you need to undo the last migration:

alembic downgrade -1



1. Generate a new Alembic migration to reflect the changes in the database schema:

alembic revision --autogenerate -m "Add payment_uuid foreign key to Email model"
alembic revision --autogenerate -m "change datetime fields to timezone-naive"


Apply the migration:

alembic upgrade head



üîπ Method 3: Using PostgreSQL CLI
If you have access to your PostgreSQL CLI (psql), connect to your database and list tables:


psql -h localhost -p 5432 -U postgres -d postgres

Then run:

\dt
‚úÖ This lists all tables in the current database.



1. Drop All Tables
Run the following SQL command inside psql:

DROP SCHEMA public CASCADE;
CREATE SCHEMA public;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO public;


