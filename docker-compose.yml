version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"   
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=/
    volumes:
      - ${pwd}/rabbitmq_data:/var/lib/rabbitmq
      - ${pwd}/rabbitmq_data/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - backend-network
    restart: always

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ${pwd}/redis_data:/data
    networks:
      - backend-network
    restart: always

  celery-beat:
    build:
      context: .
    container_name: celery-beat-container
    command: celery -A app.workers.celery_app beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - redis
    volumes:
      - ${pwd}/rabbitmq_data:/var/lib/rabbitmq
    networks:
      - backend-network

  celery:
    build:
      context: .
    container_name: celery-container
    command: celery -A app.workers.celery_app worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - redis
      - postgres
    volumes:
      - ${pwd}/rabbitmq_data:/var/lib/rabbitmq
    networks:
      - backend-network

  postgres:
    image: postgres:15
    container_name: postgres-container
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ${pwd}/postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network

  nocodb:
    image: nocodb/nocodb
    container_name: nocodb
    environment:
      - NOCODB_PORT=8080
      - NOCODB_DB_HOST=postgres
      - NOCODB_DB_PORT=5432
      - NOCODB_DB_USER=${POSTGRES_USER}
      - NOCODB_DB_PASS=${POSTGRES_PASSWORD}
      - NOCODB_DB_NAME=${POSTGRES_DB}
      - NOCODB_ADMIN_USER=${POSTGRES_USER}
      - NOCODB_ADMIN_PASS=${POSTGRES_PASSWORD}
      - NOCODB_ADMIN_EMAIL=${POSTGRES_USER}
      - NOCODB_SITE_URL=http://localhost:8080
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - ${pwd}/nocodb_data:/usr/app/nocodb
    networks:
      - backend-network
    restart: always

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      - WATCHTOWER_WATCH_ALL=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - backend-network
    restart: always

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:
  nocodb_data:

networks:
  backend-network:
    driver: bridge
