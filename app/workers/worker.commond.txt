
# 
celery -A app.workers.celery_app status
celery -A app.workers.celery_app inspect active
celery -A app.workers.celery_app inspect registered
celery -A app.workers.celery_app.celery_app worker --loglevel=DEBUG -E
celery -A app.workers.celery_app worker --loglevel=DEBUG -Q otp_queue

celery -A app.workers.celery_app list tasks

----------------------------------------------------------------------------------------
7. Example Command Setup
Hereâ€™s how you can run workers for your queues:

OTP Worker:
celery -A app worker --loglevel=info --concurrency=2 -Q otp_queue
celery -A app.workers.celery_app worker --loglevel=DEBUG -Q otp_queue

Payment Worker:
celery -A app.workers.celery_app worker --loglevel=DEBUG -Q payment_queue

Email Worker:
celery -A app.workers.celery_app worker --loglevel=DEBUG -Q email_queue

QR Worker:
celery -A app.workers.celery_app worker --loglevel=DEBUG -Q qr_queue

# flower
celery -A app.workers.celery_app.celery_app flower --port=5555

docker ps | grep celery 


---------------------------------- set_permissions.txt ----------------------------------------
sudo usermod -aG docker $USER
sudo chmod 777 /home/tagglab/Videos/Neon-Stdio-Holi-T25/postgres_data
sudo chmod -R u+rw /home/tagglab/Videos/Neon-Stdio-Holi-T25/postgres_data
sudo chmod -R 755 /home/tagglab/Videos/Neon-Stdio-Holi-T25/postgres_data
export PYTHONPATH=$PYTHONPATH:/home/tagglab/Videos/Neon-Stdio-Holi-T25/app
export PYTHONPATH=/home/tagglab/Videos/Neon-Stdio-Holi-T25/app


rabbitmq-plugins enable rabbitmq_management rabbitmq_management rabbitmq_federation rabbitmq_federation_management rabbitmq_shovel rabbitmq_shovel_management
rabbitmqctl list_bindings
rabbitmqctl list_queues
rabbitmqctl list_exchanges
rabbitmqctl list_bindings
rabbitmqctl list_vhosts
rabbitmqctl list_users
log.file.level = debug