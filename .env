#  Neon-Stdio-Holi-T25/.env

# General
DEBUG=True  # Set to False for production
HOST=0.0.0.0  # Listen on all interfaces
PORT=8000
SECRET_KEY=7F771E5A77468E8884E34BF537158  # Replace with a strong, unique secret key
ALLOWED_HOSTS=["*"]  # Adjust to your allowed hostnames in production

# Database
POSTGRES_HOST=postgres
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=postgres
POSTGRES_PORT=5432  # Add DB_PORT if not using default

# RabbitMQ (Example)
RABBITMQ_USER=guest
RABBITMQ_PASSWORD=guest
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672
RABBITMQ_VHOST=/
CELERY_RESULT_BACKEND=rpc://

RABBITMQ_URL=amqp://guest:guest@localhost:5672/ 

# Redis
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB_BROKER=0 
REDIS_DB_RESULT=0

REDIS_URL=redis://localhost:6379 


# Razorpay Configuration
RAZORPAY_KEY=your_razorpay_key
RAZORPAY_SECRET=your_razorpay_secret

# SMS API Configuration
SMS_API_URL=https://api.smsprovider.com/send
SMS_API_KEY=your_sms_api_key

# WebSocket Configuration
WEBSOCKET_URL=ws://localhost:8000/ws

# OTP Configuration
OTP_EXPIRATION_TIME=300


# Email
EMAIL_ADDRESS=your_email@gmail.com
EMAIL_PASSWORD=your_email_password



#  ---------------------------------- Docker-compose-----------------------------
# RabbitMQ
RABBITMQ_DEFAULT_USER=guest
RABBITMQ_DEFAULT_PASS=guest
RABBITMQ_DEFAULT_VHOST=/
RABBITMQ_IMAGE=rabbitmq:management-alpine
RABBITMQ_CONTAINER_NAME=rabbitmq

# PostgreSQL Configuration
POSTGRES_CONTAINER_NAME=postgres
POSTGRESS_IMAGE=postgres:15-alpine
# POSTGRES_USER=postgres
# POSTGRES_PASSWORD=postgres
# POSTGRES_DB=postgres
# POSTGRES_PORT=5432
POSTGRES_HTTP_PORT=5432

# Redis Configuration
REDIS_CONTAINER_NAME=redis
REDIS_IMAGE=redis:alpine3.20    
# REDIS_PORT=6379
REDIS_HTTP_PORT=6379

# NocoDB Configuration
NOCO_CONTAINER_NAME=nocodb
NOCO_IMAGE=nocodb/nocodb:latest
NOCO_DB_PORT=8083
NOCO_HTTP_PORT=8080
DB_TYPE=pg
DB_HOST=postgres
DB_PORT=${POSTGRES_PORT}
DB_USER=${POSTGRES_USER}
DB_PASS=${POSTGRES_PASSWORD}    
DB_NAME=${POSTGRES_DB}
NC_DB="pg://postgres:5432?u=postgres&p=postgres&d=postgres"

# Watchtower Configuration
WATCHTOWER_CONTAINER_NAME=watchtower
WATCHTOWER_IMAGE=containrrr/watchtower:latest
WATCHTOWER_PORT=8002
WATCHTOWER_HTTP_PORT=8000

# Docker Compose Network Configuration
NETWORK=backend-network
Driver=bridge
